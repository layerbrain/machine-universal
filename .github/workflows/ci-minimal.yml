name: Build Minimal Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-minimal-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - uses: actions/checkout@v4

      - name: Set NeutronAPI refresh token (UTC timestamp)
        run: echo "NEUTRONAPI_REFRESH=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/swift
          sudo rm -rf /opt/hostedtoolcache
          sudo apt-get clean
          sudo docker system prune -af --volumes
          df -h

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-minimal
            type=ref,event=pr,suffix=-minimal
            type=raw,value=minimal-amd64-latest

      - name: Build and push minimal amd64 image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: images/minimal/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=minimal-amd64
          cache-to: type=gha,mode=min,scope=minimal-amd64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            NEUTRONAPI_REFRESH=${{ env.NEUTRONAPI_REFRESH }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: ${{ github.event_name == 'push' }}
        with:
          push-to-registry: true
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}

  build-minimal-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - uses: actions/checkout@v4

      - name: Set NeutronAPI refresh token (UTC timestamp)
        run: echo "NEUTRONAPI_REFRESH=$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/swift
          sudo rm -rf /opt/hostedtoolcache
          sudo apt-get clean
          sudo docker system prune -af --volumes
          df -h

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-minimal
            type=ref,event=pr,suffix=-minimal
            type=raw,value=minimal-arm64-latest

      - name: Build and push minimal arm64 image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: images/minimal/Dockerfile
          platforms: linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=minimal-arm64
          cache-to: type=gha,mode=min,scope=minimal-arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            NEUTRONAPI_REFRESH=${{ env.NEUTRONAPI_REFRESH }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: ${{ github.event_name == 'push' }}
        with:
          push-to-registry: true
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
